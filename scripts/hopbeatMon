#!/usr/bin/python3
from optparse import OptionParser
import Utils as ut
import HeartUtils as hu
import sys
import os
import time

## Line buffer stdout and stderr
sys.stdout = os.fdopen(sys.stdout.fileno(), 'w', buffering=1)
sys.stderr = os.fdopen(sys.stderr.fileno(), 'w', buffering=1)
##
## Parse options.
##
cHelp  = "SCiMMA client configuration file"
sHelp  = "SCiMMA server URL"
sUrl   = "kafka://dev.hop.scimma.org:9092/heartbeat"
p = OptionParser(usage="Usage: %prog [options]")
p.add_option("",   "--scimma", dest="scimmaUrl", default=sUrl, help=sHelp)
p.add_option("-F", "--config", dest="scimmaConfFile", default="~/shared/kafkacat.conf", help=cHelp)
(o, a) = p.parse_args()

scimmaUrl      = o.scimmaUrl
scimmaConfFile = os.path.expanduser(o.scimmaConfFile)

print("hopBeatMon starting")
print("SCiMMA server URL:  %s"   % scimmaUrl)
print("SCiMMA config file: %s\n" % scimmaConfFile)

q = multiprocessing.Queue()
lp = multiProcessing.Process(target=hu.listen, args=(q))
rp = multiProcessing.Process(target=hu.report, args=(q))

lp.start()
rp.start()

ps = [lp, rp]

##
## Set signal handlers.
##
Terminate = False
def handleTermSig (num, foo):
     global ps
     global Terminate
     for p in ps:
          p.JustDieAlready()
     Terminate = True

sig.signal(sig.SIGTERM, handleTermSig)
sig.signal(sig.SIGINT,  handleTermSig)
print("Signal handlers installed.")

##
## Wait for our inevitable death.
##
while not Terminate:
    time.sleep(1)

print("hopbeatMon: Exited main loop.")
for p in ps:
     print("hopbeatMon joining: %s" % p.name)
     p.join()

print("hopbeatMon: Exiting.")
exit(0)
